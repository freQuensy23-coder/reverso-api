package reverso

class LanguageCode(languageCodeString: String) {
    companion object {
        val AVAILABLE_CODES: List<String> get() = listOf("ru", "en", "de", "ar", "es", "fr", "he", "it", "ja", "ko", "nl", "pl", "pt", "ro", "sv", "tr", "zh", "uk")
    }
    init {
        if (!AVAILABLE_CODES.contains(languageCodeString)) {
            throw IllegalArgumentException("Invalid language code: $languageCodeString")
        }
    }
    val code = languageCodeString

    val languageName: String
        get() = when (code) {
            "ru" -> "Russian"
            "en" -> "English"
            "de" -> "German"
            "ar" -> "Arabic"
            "es" -> "Spanish"
            "fr" -> "French"
            "he" -> "Hebrew"
            "it" -> "Italian"
            "ja" -> "Japanese"
            "ko" -> "Korean"
            "nl" -> "Dutch"
            "pl" -> "Polish"
            "pt" -> "Portuguese"
            "ro" -> "Romanian"
            "sv" -> "Swedish"
            "tr" -> "Turkish"
            "zh" -> "Chinese"
            "uk" -> "Ukrainian"
            else -> throw IllegalArgumentException("Invalid language code: $code")
        }
    override fun toString(): String = "LanguageCode(code='$code', languageName='$languageName')"
}

val LanguageCode.languageEmoji: String
    get() = when (code) {
        "ru" -> "ðŸ‡·ðŸ‡º"
        "en" -> "ðŸ‡¬ðŸ‡§"
        "de" -> "ðŸ‡©ðŸ‡ª"
        "ar" -> "ðŸ‡¸ðŸ‡¦"
        "es" -> "ðŸ‡ªðŸ‡¸"
        "fr" -> "ðŸ‡«ðŸ‡·"
        "he" -> "ðŸ‡®ðŸ‡±"
        "it" -> "ðŸ‡®ðŸ‡¹"
        "ja" -> "ðŸ‡¯ðŸ‡µ"
        "ko" -> "ðŸ‡°ðŸ‡·"
        "nl" -> "ðŸ‡³ðŸ‡±"
        "pl" -> "ðŸ‡µðŸ‡±"
        "pt" -> "ðŸ‡µðŸ‡¹"
        "ro" -> "ðŸ‡·ðŸ‡´"
        "sv" -> "ðŸ‡¸ðŸ‡ª"
        "tr" -> "ðŸ‡¹ðŸ‡·"
        "zh" -> "ðŸ‡¨ðŸ‡³"
        "uk" -> "ðŸ‡ºðŸ‡¦"
        else -> throw IllegalArgumentException("Invalid language code: $code")
    }
